<?php

namespace Plugin\ApgRichEditor\Repository;

use Eccube\Repository\AbstractRepository;
use Plugin\ApgRichEditor\Entity\Config;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * ConfigRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ConfigRepository extends AbstractRepository
{

    const CACHE_KEY = "ApgRichEditor_Repository_ConfigRepository::getOrNew";

    /**
     * ConfigRepository constructor.
     *
     * @param RegistryInterface $registry
     */
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, Config::class);
    }

    /**
     * @param int $id
     *
     * @return null|Config
     */
    public function get($id = 1)
    {
        return $this->find($id);
    }

    public function getOrNew($id = 1)
    {

        $lifetime = $this->eccubeConfig['eccube_result_cache_lifetime'];
        $qb = $this->createQueryBuilder('b')
            ->where('b.id = :id')
            ->setParameter('id', $id);

        $recode = $qb->getQuery()
            ->useResultCache(true, $lifetime, self::CACHE_KEY)
            ->getOneOrNullResult();
        return empty($recode) ? new Config() : $recode;

    }

    public function save($entity)
    {
        $result = parent::save($entity);

        $em = $this->getEntityManager();
        $cacheImpl = $em->getConfiguration()->getResultCacheImpl();
        if (!empty($cacheImpl)) {
            $cacheImpl->delete(self::CACHE_KEY);
        }

        return $result;
    }
}
